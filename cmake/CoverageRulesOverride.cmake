if(_CoverageRulesOverrideModuleIncluded)
    return()
else()
    set(_CoverageRulesOverrideModuleIncluded TRUE)
endif()

if(NOT Coverage_BASE_CONFIGURATION)
    set(Coverage_BASE_CONFIGURATION RelWithDebInfo)
endif()
string(TOUPPER "${Coverage_BASE_CONFIGURATION}" Coverage_BASE_CONFIGURATION)

set(_Coverage_C_CXX_COMMON_FLAGS)
set(_Coverage_DYNAMIC_LINKER_FLAGS)
set(_Coverage_STATIC_LINKER_FLAGS)
set(Coverage_SUPPORTED OFF)

include("${CMAKE_CURRENT_LIST_DIR}/CCompilerCliSyntax.cmake")

if(CMAKE_C_COMPILER_CLI_SYNTAX_GNU)
    #  -fprofile-abs-path
    set(_Coverage_C_CXX_COMMON_FLAGS "${_Coverage_C_CXX_COMMON_FLAGS} -fprofile-arcs -ftest-coverage")
    set(_Coverage_DYNAMIC_LINKER_FLAGS "${_Coverage_DYNAMIC_LINKER_FLAGS} -fprofile-arcs")
    set(Coverage_SUPPORTED ON)
endif()

set(CMAKE_CXX_FLAGS_COVERAGE_INIT "${CMAKE_CXX_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_C_CXX_COMMON_FLAGS}")
set(CMAKE_C_FLAGS_COVERAGE_INIT "${CMAKE_C_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_C_CXX_COMMON_FLAGS}")

set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_SHARED_LINKER_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_DYNAMIC_LINKER_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_EXE_LINKER_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_DYNAMIC_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_MONULE_LINKER_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_DYNAMIC_LINKER_FLAGS}")
set(CMAKE_STATIC_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_STATIC_LINKER_FLAGS_${Coverage_BASE_CONFIGURATION}_INIT} ${_Coverage_STATIC_LINKER_FLAGS}")

get_property(_Coverage_GENERATOR_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)

if(Coverage_SUPPORTED AND _Coverage_GENERATOR_MULTI_CONFIG AND NOT "Coverage" IN_LIST CMAKE_CONFIGURATION_TYPES)
    list(APPEND CMAKE_CONFIGURATION_TYPES Coverage)
endif()
