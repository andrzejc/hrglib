if(_ASANRulesOverrideModuleIncluded)
    return()
else()
    set(_ASANRulesOverrideModuleIncluded TRUE)
endif()

if(NOT ASAN_BASE_CONFIGURATION)
    set(ASAN_BASE_CONFIGURATION Debug)
endif()
string(TOUPPER "${ASAN_BASE_CONFIGURATION}" ASAN_BASE_CONFIGURATION)

set(_ASAN_C_CXX_COMMON_FLAGS)
set(_ASAN_DYNAMIC_LINKER_FLAGS)
set(ASAN_SUPPORTED OFF)

include("${CMAKE_CURRENT_LIST_DIR}/CCompilerCliSyntax.cmake")

if(CMAKE_C_COMPILER_CLI_SYNTAX_GNU)
    set(_ASAN_C_CXX_COMMON_FLAGS "-fsanitize=address -fno-omit-frame-pointer")
    set(_ASAN_DYNAMIC_LINKER_FLAGS -fsanitize=address)
    set(ASAN_SUPPORTED ON)
endif()

set(CMAKE_C_FLAGS_ASAN_INIT "${CMAKE_C_FLAGS_${ASAN_BASE_CONFIGURATION}_INIT} ${_ASAN_C_CXX_COMMON_FLAGS}")
set(CMAKE_CXX_FLAGS_ASAN_INIT "${CMAKE_CXX_FLAGS_${ASAN_BASE_CONFIGURATION}_INIT} ${_ASAN_C_CXX_COMMON_FLAGS}")

set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_SHARED_LINKER_FLAGS_${ASAN_BASE_CONFIGURATION}_INIT} ${_ASAN_DYNAMIC_LINKER_FLAGS}")
set(CMAKE_EXE_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_EXE_LINKER_FLAGS_${ASAN_BASE_CONFIGURATION}_INIT} ${_ASAN_DYNAMIC_LINKER_FLAGS}")
set(CMAKE_MODULE_LINKER_FLAGS_COVERAGE_INIT "${CMAKE_MODULE_LINKER_FLAGS_${ASAN_BASE_CONFIGURATION}_INIT} ${_ASAN_DYNAMIC_LINKER_FLAGS}")

get_property(_ASAN_GENERATOR_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)

if(ASAN_SUPPORTED AND _ASAN_GENERATOR_MULTI_CONFIG AND NOT "ASAN" IN_LIST CMAKE_CONFIGURATION_TYPES)
    list(APPEND CMAKE_CONFIGURATION_TYPES ASAN)
endif()
